.icons-not-ready .material-symbols-outlined {
    visibility: hidden;
    font-size: 2px;
}

.icons-ready .material-symbols-outlined {
    visibility: visible;
}

.configButtonsContainerWideMode {
    @media screen and (min-width: 1000px) {
        display: flex;

    }
}

.categoryButtonContainer {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    @media screen and (max-width: 1000px) {
        grid-template-columns: repeat(4, 1fr);
    }
    @media screen and (max-width: 700px) {
        grid-template-columns: repeat(2, 1fr);
    }
    grid-gap: 16px;
    margin-top: 8px;
}

.categoryButtonContainerWideMode {
    @media screen and (min-width: 1000px) {
        grid-template-columns: 1fr;
        grid-auto-rows: min-content;
        margin-right: 16px;
    }
}

.categoryButton {
    background-color: var(--shade2);
    @media (prefers-color-scheme: dark) {
        background-color: var(--shade7);
    }
    border-radius: 8px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: 0.5s;
    padding: 0 8px;
}
.categoryButton:hover, .categoryButtonSelected {
    background-color: var(--shade4);
    @media (prefers-color-scheme: dark) {
        background-color: var(--shade5);
    }
    transition: 0.5s;
}
.categoryButton > * {
    transition: 0.5s;
}
.categoryButton:hover > *, .categoryButtonSelected > * {
    color: var(--shade8);
    @media (prefers-color-scheme: dark) {
        color: var(--shade1);
    }
    transition: 0.5s;
}

.primaryCategoryButton {
    background-color: var(--primaryTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryTower7);
    }
}
.primaryCategoryButton:hover, .primaryCategoryButtonSelected {
    background-color: var(--primaryTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryTower5);
    }
}

.militaryCategoryButton {
    background-color: var(--militaryTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--militaryTower7);
    }
}
.militaryCategoryButton:hover, .militaryCategoryButtonSelected {
    background-color: var(--militaryTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--militaryTower5);
    }
}

.magicCategoryButton {
    background-color: var(--magicTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--magicTower7);
    }
}
.magicCategoryButton:hover, .magicCategoryButtonSelected {
    background-color: var(--magicTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--magicTower5);
    }
}

.supportCategoryButton {
    background-color: var(--supportTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--supportTower7);
    }
}
.supportCategoryButton:hover, .supportCategoryButtonSelected {
    background-color: var(--supportTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--supportTower5);
    }
}

.heroesCategoryButton {
    background-color: var(--heroes3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--heroes7);
    }
}
.heroesCategoryButton:hover, .heroesCategoryButtonSelected {
    background-color: var(--heroes5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--heroes5);
    }
}

.magicCategoryButton:hover > *, .magicCategoryButtonSelected > *
{
    color: var(--shade1)
}

.primaryCategoryButton:hover > *, .primaryCategoryButtonSelected > *,
.militaryCategoryButton:hover > *, .militaryCategoryButtonSelected > *,
.supportCategoryButton:hover > *, .supportCategoryButtonSelected > *,
.heroesCategoryButton:hover > *, .heroesCategoryButtonSelected > * 
{
    @media (prefers-color-scheme: dark) {
        color: var(--shade8)
    }
}

.pageButtonContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;
    align-items: center;
    width: calc(100%);
    margin-top: 16px;
}

.pageButtonContainerWideMode {
    @media screen and (min-width: 1000px) {
        height: min-content;
        width: min-content;
        margin-top: 8px;
    }
}
.heroPageButtonContainer{
    @media screen and (min-width: 1000px) {
        display: grid;
        grid-template-columns: 1fr 1fr;
    }
}
.pageButton {
    background-color: var(--shade2_5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--shade6_5);
    }
    height: 75px; aspect-ratio: 1;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.5s;
    cursor: pointer;
}
.pageButton:hover, .pageButtonSelected {
    background-color: var(--shade4);
    @media (prefers-color-scheme: dark) {
        background-color: var(--shade5);
    }
    transition: 0.5s;
}
.pageButton:hover > .pageButtonImage, .pageButtonSelected > .pageButtonImage {
    transform: scale(1.4);
}

.contentContainer {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.contentContainerWideMode {
    @media screen and (min-width: 1000px) {
        display: grid;
        grid-template-columns: min-content 1fr;
    }
}

/* .primaryTowerPageButton {
    background-color: var(--primaryTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryTower7);
    }
}
.primaryTowerPageButton:hover, .primaryTowerPageButtonSelected {
    background-color: var(--primaryTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryTower5);
    }
} */

.militaryTowerPageButton {
    background-color: var(--militaryTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--militaryTower7);
    }
}
.militaryTowerPageButton:hover, .militaryTowerPageButtonSelected {
    background-color: var(--militaryTower5);
    @media (prefers-color-scheme: dark) {
        background-color: var(--militaryTower5);
    }
}

.pageButtonImage {
    height: 60px;
    aspect-ratio: auto;
    transition: 0.5s;
}

.pathName {
    margin: 20px 0 4px 0 
}

.upgradeName {
    margin: 12px 0 4px 0 
}

.baseTowerName {
    margin: 0 0 4px 0 
}

.statsContainer {
    display: grid;
    grid-template-columns: 1fr;
    gap: 16px;
    opacity: 0;
    transition: 0.2s;
    transition-delay: 0.1s;
}
.statsContainerInstantTransition {
    transition: 0s;
    transition-delay: 0s;
}

.compareStats {
    display: none;
}

.compareButton {
    @media screen and (max-width: 700px) {
        display: none;
    }
}

.advancedButton {
    background-color: hsl(0, 100%, 80%);
    @media (prefers-color-scheme: dark) {
        background-color: hsl(0, 100%, 40%);
    }
}

.advancedButton:hover {
    background-color: hsl(0, 100%, 73%);
    @media (prefers-color-scheme: dark) {
        background-color: hsl(0, 100%, 50%);
    }
}

.statsContentAlignmentContainer {
    display: flex;
    flex-direction: column;
    /* align-self: center; */
    width: 100%;
}   

.statsContentContainer {
    display: flex;
    flex-direction: column;
    align-self: center;
    gap: 8px;
    max-width: 800px;
    width: 100%;
}

.compareButtonDialog {
    background-color: var(--primaryLight3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark3);
    }
    top: calc(100vh - 70px);
    left: calc(100vw - 220px);;
    width: 140px; height: 20px;
    /* display: flex; */
    display: none;
    align-items: center;
    justify-content: center;
    transition: 0.5s;
    cursor: pointer;
}

.compareButtonDialog:hover {
    background-color: var(--primaryLight2);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark2);
    }
    transition: 0.5s;
}

.titleBar {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    align-items: center;
}

.towerCostButton {
    margin-left: auto;
}

.towerCostSection {
    display: none;
    background-color: var(--primaryLight3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark3);
    }
    gap: 24px;
    align-items: center;
    justify-content: center;
    @media screen and (max-width: 900px) {
    }
    flex-direction: column;
}

.showCost {
    display: flex;
}

.configurationBarTextSelectorWrapper {
    display: flex; flex-direction: column; 
    gap: 4px; align-items: flex-start;
}
.configPathContainer {
    display: flex;
    flex-direction: column;
    gap: 8px
}
.configSinglePathContainer {
    display: flex;
    align-items: center;
}
.configSinglePathContainer > * {
    padding: 2px 4px;
    border-radius: 0;
}
.configSinglePathContainer > * > * {
    color: var(--shade5_5);
    @media (prefers-color-scheme: dark) {
        color: var(--shade2_5);
    }
    width: 12px;
}
.configBarPush {
    margin-left: auto;
}
.pathStart {
    border-radius: 8px 0 0 8px;
}
.pathEnd {
    border-radius: 0 8px 8px 0;
}
.selected {
    background-color: var(--primaryLight1);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark1);
    };
    height: 32px;
}
.selected > * {
    color: var(--shade8);
    @media (prefers-color-scheme: dark) {
        color: var(--shade1);
    };
    font-size: 15pt;
}

.sellLossText {
    font-size: 24pt;
    color: var(--lossColorDark);
    @media (prefers-color-scheme: dark) {
        color: var(--lossColorLight)
    };
}

.hide {
    display: none;
}

.buffText {
    margin-bottom: 4px;
}

.buffIconContainer {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.buffIconRow {
    display: flex;
    gap: 4px;
}

.buffIcon {
    background-color: var(--shade4);
    @media (prefers-color-scheme: dark) {
        background-color: var(--shade4);
    };
    border-radius: 8px;
    height: 40px; width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.buffIconSelected {
    background-color: var(--primaryLight2);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark2);
    };
}

.buffIconImage {
    height: 35px;
}

.requiredBuffs > * {
    background-color: var(--primaryTower3);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryTower7);
    };
}

.cornerButtonContainer {
    position: fixed;
    right: 16px;
    bottom: 16px;
    display: flex;
    flex-direction: column;
    align-items: end;
    gap: 8px;
    opacity: 0;
    transition: 0.2s;
    transition-delay: 0.1s;
}

.cornerButtonContainer button {
    padding-bottom: 0;
}

.cornerButtons {
    border-radius: 8px;
    display: flex;
    align-items: end;
    justify-content: end;
    cursor: pointer;
    gap: 8px;

}

.cornerButtonPreviewText {
    background-color: var(--primaryLight2);
    @media (prefers-color-scheme: dark) {
        background-color: var(--primaryDark2);
    };
    padding: 2px 4px;
    border-radius: 8px;
}

.dangerPreviewText {
    background-color: hsl(0, 100%, 80%);
    @media (prefers-color-scheme: dark) {
        background-color: hsl(0, 100%, 40%);
    }
}

.costsContainer {
    display: flex;
    gap: 24px;
    @media screen and (max-width: 700px) {
        flex-direction: column;
        gap: 8px;
    }
}

.costTitleContainer {
    display: flex;
    align-items: center;
    gap: 8px;
}

.copyCostButton {
    /*height: 16px; aspect-ratio: 1;*/
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 4px;
}

.copyCostButton .material-symbols-outlined {
    font-size: 10pt;

}

.costsContainer > div {
    @media screen and (max-width: 700px) {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
}

.experimentsText {
    color: hsl(0, 100%, 20%);
    @media (prefers-color-scheme: dark) {
        color: hsl(0, 100%, 80%);
    }
}

.loadingOverlay {
    position: fixed;
    width: 100vw; height: 100vh;
    display: flex;
    gap: 32px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: 0.2s;
}
.loadingOverlayInstantTransition {
    transition: 0s;
}

.ring {
    display: inline-block;
    width: 20px;
    aspect-ratio: 1;
}
.ring:after {
    content: " ";
    display: block;
    width: 16px;
    aspect-ratio: 1;
    margin: 0;
    border-radius: 50%;
    animation: ring 0.5s linear infinite;
    border: 6px solid;
    border-color: var(--primary) var(--primary) transparent transparent;
}
@keyframes ring {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}